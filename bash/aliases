
#Alias section
alias s='ssh -A'
alias r='rails'
alias ll='ls -lart'
alias la='ls -la'
alias home='ssh www.lasamaria.com'
alias new='. ~/openterminal.sh'
alias ss='./script/server'
alias sun='ssh -p 15151 www.lasamaria.com'
alias cht1utlb001='ssh cht1utlb001.eng.charone.com'


#SSH alias
alias utla='ssh -A -p 15151 216.236.227.145'
alias utld='ssh -p 15151 168.75.198.182'
alias utlb='ssh -p 15151 216.236.227.210'
alias server='ssh www.lasamaria.com'
alias ssh='ssh -A'
alias stagewebis='ssh -L 3000:10.241.13.28:3000 168.75.198.182 -p 15151'

#Top
alias tu='top -o cpu' #cpu
alias tm='top -o vsize' #memory

# Subversion
alias sup='svn update'
alias sst='svn status'
alias scom='svn commit'
alias sd='svn diff | mate'
alias slog='svn log | more'
alias sex='svn export'

# TextMate
alias e='mate'
alias et='mate . &'
alias ett='mate app config lib db public test vendor/plugins &'

#Ruby
alias att='autotest'

#Rails
alias kl='killall -9 lighttpd; killall -9 ruby'
alias ss='./script/server'
alias sc='./script/console'
alias sg='./script/generate'
alias sp='./script/plugin'
alias mr='mongrel_rails start'
alias tt="autotask 'rake test:recent' app test"

alias a='autotest -rails'
alias tlog='tail -f log/development.log'
alias migrate='rake db:migrate db:test:clone'
alias rst='touch tmp/restart.txt'
alias r=rails

# Git aliases for bash
# Put in ~/.bash_profile

alias gst='git status'
alias gl='git pull'
alias gp='git push'
alias gd='git diff | mate'
alias gc='git commit -v'
alias gca='git commit -v -a'
alias gb='git branch'
alias gba='git branch -a'
alias lf='ls -art|tail -3|grep -v "^.$"|grep -v "^..$"'

alias work='terminitor'

alias h='history'
alias ..='cd ..'
alias migrate='rake db:migrate db:test:prepare'
alias killrubies="ps -eaf|grep ruby|grep -v 'grep ruby'|awk '{print $2}'|xargs kill -9"

#create ramdisk
alias create_ramdisk='diskutil erasevolume HFS+ "ramdisk" `hdiutil attach -nomount ram://1165430`'


#function for cucumber
function c () {
  if [ $# -eq 0 ]; then
    local cmd="bundle exec cucumber"
  else
    local cmd="bundle exec cucumber $@ --require features"
      fi
      echo $cmd
      eval $cmd
}


# extract archives -- usage: extract </path/to/archive/>
extract () {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2) tar xjf $1 ;;
      *.tar.gz) tar xzf $1 ;;
      *.bz2) bunzip2 $1 ;;
      *.rar) unrar e $1 ;;
      *.gz) gunzip $1 ;;
      *.tar) tar xf $1 ;;
      *.tbz2) tar xjf $1 ;;
      *.tgz) tar xzf $1 ;;
      *.zip) unzip "$1" ;;
      *.Z) uncompress $1 ;;
      *.7z) 7z x $1 ;;
      *) echo "'$1' cannot be extracted via extract()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

